<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="epUsuario.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>39</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkupHbJHpSOOL4EPNj99D+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACS20kHlPJGTI3kQ6iO4UMiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
  <metadata name="epSenha.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
  <metadata name="epConfSenha.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>416, 17</value>
  </metadata>
  <metadata name="epNome.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>223, 17</value>
  </metadata>
  <metadata name="epCPF.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>540, 17</value>
  </metadata>
  <metadata name="epEmail.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>322, 17</value>
  </metadata>
</root>